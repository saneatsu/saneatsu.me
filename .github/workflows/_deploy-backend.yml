name: 🚀 [Common] Deploy Backend

on:
  workflow_call:
    inputs:
      ENV:
        description: 'Environment name (preview/production)'
        type: string
        required: true
    secrets:
      CLOUDFLARE_ACCOUNT_ID:
        required: true
      CLOUDFLARE_API_TOKEN:
        required: true

env:
  ENV: ${{ inputs.ENV }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      statuses: write
      deployments: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download .env artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-env-file-${{ env.ENV }}
          path: apps/backend

      - name: Verify .env file
        run: |
          echo "📁 Files in apps/backend:"
          ls -la apps/backend/
          if [ -f apps/backend/.env ]; then
            echo "✅ .env file exists"
            echo "📄 .env contents (masked):"
            sed 's/=.*/=***/' apps/backend/.env
          else
            echo "❌ .env file not found"
            exit 1
          fi

      - name: Build backend
        run: pnpm --filter @saneatsu/backend build

      - name: Deploy to Cloudflare Workers with environment variables
        id: cloudflare-wrangler
        run: |
          cd apps/backend
          
          # .envファイルから環境変数を読み込む
          export $(cat .env | xargs)
          
          # Cloudflare Workersにデプロイ（環境変数を渡す）
          npx wrangler deploy --env ${{ env.ENV }} \
            --var TURSO_DATABASE_URL:"$TURSO_DATABASE_URL" \
            --var TURSO_AUTH_TOKEN:"$TURSO_AUTH_TOKEN" \
            --var CORS_ORIGIN:"$CORS_ORIGIN" \
            --var ADMIN_EMAILS:"$ADMIN_EMAILS"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Add deployment URL as commit status
        uses: actions/github-script@v7
        with:
          script: |
            const sha = context.payload.pull_request?.head.sha ?? context.sha;
            const environment = '${{ env.ENV }}';
            const deploymentUrl = environment === 'production' 
              ? 'https://api.saneatsu.me' 
              : 'https://saneatsu-backend-preview.w-saneatsu-e8c.workers.dev';
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              context: `Cloudflare Workers (${environment})`,
              description: "Access backend deployment",
              state: "success",
              sha,
              target_url: deploymentUrl,
            });