name: üöÄ [Common] Deploy Web

on:
  workflow_call:
    inputs:
      ENV:
        description: 'Environment name (preview/production)'
        type: string
        required: true
    secrets:
      CLOUDFLARE_ACCOUNT_ID:
        required: true
      CLOUDFLARE_API_TOKEN:
        required: true

env:
  ENV: ${{ inputs.ENV }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      statuses: write
      deployments: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download .env artifact
        uses: actions/download-artifact@v4
        with:
          name: web-env-file-${{ env.ENV }}
          path: apps/web

      - name: Verify .env file
        run: |
          echo "üìÅ Files in apps/web:"
          ls -la apps/web/
          if [ -f apps/web/.env ]; then
            echo "‚úÖ .env file exists"
            echo "üìÑ .env contents (masked):"
            sed 's/=.*/=***/' apps/web/.env
          else
            echo "‚ùå .env file not found"
            exit 1
          fi

      - name: Build for Cloudflare
        run: pnpm --filter @saneatsu/web build:cloudflare
        env:
          NODE_ENV: production

      - name: Deploy to Cloudflare Workers with environment variables
        id: cloudflare-wrangler
        run: |
          cd apps/web
          
          # .env„Éï„Ç°„Ç§„É´„Åã„ÇâÁí∞Â¢ÉÂ§âÊï∞„ÇíË™≠„ÅøËæº„ÇÄ
          export $(cat .env | xargs)
          
          # Cloudflare Workers„Å´„Éá„Éó„É≠„Ç§ÔºàÁí∞Â¢ÉÂ§âÊï∞„ÇíÊ∏°„ÅôÔºâ
          npx wrangler deploy --env ${{ env.ENV }} \
            --var NEXTAUTH_URL:"$NEXTAUTH_URL" \
            --var NEXTAUTH_SECRET:"$NEXTAUTH_SECRET" \
            --var NEXT_PUBLIC_API_URL:"$NEXT_PUBLIC_API_URL" \
            --var GOOGLE_CLIENT_ID:"$GOOGLE_CLIENT_ID" \
            --var GOOGLE_CLIENT_SECRET:"$GOOGLE_CLIENT_SECRET" \
            --var ADMIN_EMAILS:"$ADMIN_EMAILS" \
            --var BASIC_AUTH_USER:"$BASIC_AUTH_USER" \
            --var BASIC_AUTH_PASSWORD:"$BASIC_AUTH_PASSWORD"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Add deployment URL as commit status
        uses: actions/github-script@v7
        with:
          script: |
            const sha = context.payload.pull_request?.head.sha ?? context.sha;
            const environment = '${{ env.ENV }}';
            const deploymentUrl = environment === 'production' 
              ? 'https://saneatsu.me' 
              : 'https://saneatsu-web-preview.w-saneatsu-e8c.workers.dev';
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              context: `Cloudflare Pages (${environment})`,
              description: "Access web deployment",
              state: "success",
              sha,
              target_url: deploymentUrl,
            });